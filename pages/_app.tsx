import type { AppProps } from "next/app";
import NProgress from "nprogress";
import Router from "next/router";
import Head from "next/head";
import { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from "@apollo/client";
import { setContext } from "@apollo/client/link/context";

import "react-loader-spinner/dist/loader/css/react-spinner-loader.css";
import "./../styles/fonts.css";
import "./../styles/nprogress.css";
import GlobalStyles from "../styles/globalStyles";

Router.events.on("routeChangeStart", () => NProgress.start());
Router.events.on("routeChangeComplete", () => NProgress.done());
Router.events.on("routeChangeError", () => NProgress.done());

const httpLink = createHttpLink({
  uri: "http://localhost:5000",
});

const authLink = setContext(() => {
  const token = localStorage.getItem("jwtToken");
  return {
    headers: {
      Authorization: token ? `Bearer ${token}` : "",
    },
  };
});

const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache: new InMemoryCache(),
});

const MyApp = ({ Component, pageProps }: AppProps) => {
  return (
    <>
      <ApolloProvider client={client}>
        <Head>
          <title>Как так-то...?</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <GlobalStyles />
        <Component {...pageProps} />
      </ApolloProvider>
    </>
  );
};
export default MyApp;
